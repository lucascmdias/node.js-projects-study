var FLAG_WILL_RERENDER_IN_BROWSER = 1;
// var FLAG_HAS_RENDER_BODY = 2;
// var FLAG_IS_LEGACY = 4;
// var FLAG_OLD_HYDRATE_NO_CREATE = 8;

function nextComponentIdProvider(out) {
  var prefix = out.global.componentIdPrefix || out.global.widgetIdPrefix || "s"; // "s" is for server (we use "b" for the browser)
  var nextId = 0;

  // eslint-disable-next-line no-constant-condition


  return function nextComponentId() {
    return prefix + nextId++;
  };
}

function attachBubblingEvent(componentDef, handlerMethodName, isOnce, extraArgs) {
  if (handlerMethodName) {
    if (extraArgs) {
      var component = componentDef.n_;
      var eventIndex = component._T_++;

      // If we are not going to be doing a rerender in the browser
      // then we need to actually store the extra args with the UI component
      // so that they will be serialized down to the browser.
      // If we are rerendering in the browser then we just need to
      // increment ___bubblingDomEventsExtraArgsCount to keep track of
      // where the extra args will be found when the UI component is
      // rerendered in the browser

      if (!(componentDef._E_ & FLAG_WILL_RERENDER_IN_BROWSER)) {
        if (eventIndex === 0) {
          component.P_ = [extraArgs];
        } else {
          component.P_.push(extraArgs);
        }
      }

      return handlerMethodName + " " + componentDef.id + " " + isOnce + " " + eventIndex;
    } else {
      return handlerMethodName + " " + componentDef.id + " " + isOnce;
    }
  }
}

exports._Q_ = nextComponentIdProvider;
exports.aD_ = true;
exports._y_ = attachBubblingEvent;
exports.aJ_ = function noop() {};
exports.G_ = function noop() {};

// eslint-disable-next-line no-constant-condition