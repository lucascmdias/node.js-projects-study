"use strict";

var GlobalComponentsContext = require("./GlobalComponentsContext");

function ComponentsContext(out, parentComponentsContext) {
  var globalComponentsContext;
  var componentDef;

  if (parentComponentsContext) {
    globalComponentsContext = parentComponentsContext.k_;
    componentDef = parentComponentsContext._M_;

    var nestedContextsForParent;
    if (!(nestedContextsForParent = parentComponentsContext._N_)) {
      nestedContextsForParent = parentComponentsContext._N_ = [];
    }

    nestedContextsForParent.push(this);
  } else {
    globalComponentsContext = out.global.h_;
    if (globalComponentsContext === undefined) {
      out.global.h_ = globalComponentsContext = new GlobalComponentsContext(out);
    }
  }

  this.k_ = globalComponentsContext;
  this.h_ = [];
  this.A_ = out;
  this._M_ = componentDef;
  this._N_ = undefined;
  this.r_ = parentComponentsContext && parentComponentsContext.r_;
}

ComponentsContext.prototype = {
  B_: function (doc) {
    var componentDefs = this.h_;

    ComponentsContext._O_(componentDefs, doc);

    this.A_.emit("_P_");

    // Reset things stored in global since global is retained for
    // future renders
    this.A_.global.h_ = undefined;

    return componentDefs;
  }
};

function getComponentsContext(out) {
  return out.h_ || (out.h_ = new ComponentsContext(out));
}

module.exports = exports = ComponentsContext;

exports.q_ = getComponentsContext;